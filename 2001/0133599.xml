<?xml version="1.0" encoding="UTF-8"?>

<rootTag>
  <Award>
    <AwardTitle>Generic Software Foundations for Geometric Computing</AwardTitle>
    <AwardEffectiveDate>06/01/2002</AwardEffectiveDate>
    <AwardExpirationDate>05/31/2008</AwardExpirationDate>
    <AwardAmount>338620</AwardAmount>
    <AwardInstrument>
      <Value>Continuing grant</Value>
    </AwardInstrument>
    <Organization>
      <Code>05010000</Code>
      <Directorate>
        <LongName>Direct For Computer &amp; Info Scie &amp; Enginr</LongName>
      </Directorate>
      <Division>
        <LongName>Division of Computing and Communication Foundations</LongName>
      </Division>
    </Organization>
    <ProgramOfficer>
      <SignBlockName>Dmitry Maslov</SignBlockName>
    </ProgramOfficer>
    <AbstractNarration>0133599&lt;br/&gt;Bronnimann, Herve&lt;br/&gt;Polytechnic Univ of NY&lt;br/&gt;&lt;br/&gt;Geometric computing, as applied in computer graphics, robotics, architecture, geographic information system, spatial databases, solid modeling, has penetrated every domain of science and engineering, from astrophysics to molecular biology to physical simulations and fluid dynamics. Recent years have witnessed a growing demand for two- and mostly three-dimensional computations. For the past two decades, computational geometers have investigated the mathematical foundations of this nascent field and have solved the asympotic complexity of basic geomteric problems. But theoretical solutions, while bringing valubable insight into the problem, hardly answerthe whole prob lem, and some research is needed on how to engineer these solutions to bring the benefits of these insights into practical solutions. &lt;br/&gt;Specifically, we propose to study the geometric primitives and underlying the field of computional geometry and its many applications, and to develop geometric concepts for basic geometric objects and predicates as well as for 3D general subdivisions in various geometric concepts. The methodology of separating the development of concepts from ther implementation is inspried by the generic programming paradigm. This is an approach that has met with success in other fields of algorithm engineering (most notably the C++ Standard Template Library -STL). We also propose to continue our investigaion of non-robustness problems in geometric algorithms. One approach to solving the problem, which is more efficient than exact computation, is the exact predicate paradigm in which only the primitives leading to critical decisions are guaranteed to make the correct decisions, even if quantities are not computed exactly. We propose to study the efficient implementation and implications of the exact predicate paradigm. The educational part of this proposal strengthens the research program by proposing to write a textbook devoted to implementation issues in geometric computing, designed to provide a foundation to and complement the existing classical computaitonal geometry textbooks.</AbstractNarration>
    <MinAmdLetterDate>12/28/2001</MinAmdLetterDate>
    <MaxAmdLetterDate>06/29/2006</MaxAmdLetterDate>
    <ARRAAmount/>
    <AwardID>0133599</AwardID>
    <Investigator>
      <FirstName>Herve</FirstName>
      <LastName>Bronnimann</LastName>
      <EmailAddress>hbr@poly.edu</EmailAddress>
      <StartDate>12/28/2001</StartDate>
      <EndDate/>
      <RoleCode>Principal Investigator</RoleCode>
    </Investigator>
    <Institution>
      <Name>Polytechnic University of New York</Name>
      <CityName>Brooklyn</CityName>
      <ZipCode>112013826</ZipCode>
      <PhoneNumber>7182603360</PhoneNumber>
      <StreetAddress>15 Metrotech Center</StreetAddress>
      <CountryName>United States</CountryName>
      <StateName>New York</StateName>
      <StateCode>NY</StateCode>
    </Institution>
    <FoaInformation>
      <Code>0000912</Code>
      <Name>Computer Science</Name>
    </FoaInformation>
  </Award>
</rootTag>
